{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.jsx","Gyphera.jsx","index.js"],"names":["AddCategory","setCategories","useState","textBox","settextBox","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","name","onChange","target","value","className","GifGridItem","title","url","src","alt","getGifs","category","a","process","fetch","request","json","data","gifs","map","img","id","images","downsized_medium","require","useEffect","GifGrid","loading","state","setstate","then","imgs","catch","error","console","log","useFetchGifs","image","key","GifExpertApp","params","ReactDOM","render","Gyphera","document","getElementById"],"mappings":"qNAqCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBAChCC,EADgC,KACvBC,EADuB,KAcvC,OACE,0BAAMC,SAVe,SAACC,GACtBA,EAAEC,iBAECJ,EAAQK,OAAOC,OAAS,IACzBR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAiBO,OAC1CN,EAAW,OAMX,2BACEO,KAAK,OACLC,YAAY,uBACZC,KAAK,YACLC,SAjBiB,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OAAcX,EAAWW,EAAOC,QAkBjDA,MAAOb,IAET,4BAAQc,UAAU,OAAlB,iBCnBSC,EAPK,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,IAAR,OAClB,yBAAKH,UAAU,2CACb,yBAAKI,IAAKD,EAAKE,IAAMH,IACrB,+BAAKA,EAAL,O,uBCDSI,G,MAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDACiCI,EADjC,6BAFWE,oCAEX,SAECC,MAAMP,GAFP,cAEfQ,EAFe,gBAGAA,EAAQC,OAHR,mBAGdC,EAHc,EAGdA,KAHc,0DAQfC,EAAOD,EAAKE,KAAK,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAZjB,kBAgBdW,GAhBc,4CAAH,uD,ECFYM,EAAQ,GAAhCnC,E,EAAAA,SAAUoC,E,EAAAA,UCgCHC,EA3BC,SAAC,GAAgB,IAAff,EAAc,EAAdA,SAAc,EDDJ,SAACA,GAAc,IAAD,EACdtB,EAAS,CACjC4B,KAAM,GACNU,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAXAJ,GAAU,WACRf,EAAQC,GACLmB,MAAM,SAAAC,GACHF,EAAS,CACPZ,KAAMc,EACNJ,SAAS,OAGdK,OAAM,SAAAC,GAAK,OAAKC,QAAQC,IAAIF,QAC9B,CAACtB,IAEGiB,EChB0BQ,CAAazB,GAAjCW,EADiB,EACtBL,KAAaU,EADS,EACTA,QAErB,OACE,oCACE,wBAAIvB,UAAU,uCAAd,IAAsDO,EAAtD,KACEgB,GAAW,uBAAGvB,UAAU,oCAAb,iBAEVkB,EAEC,yBAAKlB,UAAU,QAEXkB,EAAOH,KAAK,SAAAkB,GAAK,OACb,kBAAC,EAAD,iBACMA,EADN,CAEEC,IAAKD,EAAMhB,UAMrB,mDCLKkB,EAlBM,SAACC,GAAY,IAAD,EACKnD,mBAAS,CAAC,cADf,mBACxBQ,EADwB,KACZT,EADY,KAG/B,OACE,oCACE,yCACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACIS,EAAWsB,KAAI,SAACR,GAAD,OACb,kBAAC,EAAD,CAASA,SAAUA,EAAU2B,IAAK3B,U,MCT9C8B,IAASC,OACL,kBAACC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.4e29fda5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst AddCategory = ({setCategories}) => {\n  const [textBox, settextBox] = useState('')\n\n  const handleOnChange = ({target}) => settextBox(target.value);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    \n    if(textBox.trim().length > 2) {\n      setCategories( categories => [textBox, ...categories]); \n      settextBox('');     \n    }\n  }\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <input \n        type=\"text\"\n        placeholder=\"Ingrese categorÃ­a\"\n        name=\"categoria\"\n        onChange={handleOnChange} \n        value={textBox} \n      />\n      <button className=\"btn\">Search Gifs</button>\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","import React from 'react';\n\nconst GifGridItem = ({title,url}) => (\n  <div className=\"card  animate__animated animate__fadeIn\">\n    <img src={url} alt={ title } />\n    <p> {title} </p>\n  </div>\n)\n\nexport default GifGridItem;\n","import 'dotenv/config.js';\n// dotenv used only for local server purpose\nconst {REACT_APP_GIPHY_API_KEY} = process.env;\n\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${REACT_APP_GIPHY_API_KEY}`;\n  const request = await fetch(url);\n  const {data} = await request.json();\n\n  if (!data)\n    return;\n  \n  const gifs = data.map( (img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    } \n  });\n\n  return gifs;\n}","import { getGifs } from \"../helpers/getGifs\";\n\nconst { useState, useEffect } = require(\"react\")\n\n\n\nexport const useFetchGifs = (category) => {\n  const [state, setstate] = useState({\n    data: [],\n    loading: true,\n  });\n\n  // Si se establece ninguna dependencia ([]), de esta forma solo se ejecuta una vez, similar al componentDidMount()\n  useEffect(() => {\n    getGifs(category)\n      .then( imgs => {\n          setstate({\n            data: imgs,\n            loading: false\n          });          \n      })\n      .catch(error  => console.log(error));\n  }, [category])\n\n  return state;\n}","import React  from 'react'\n\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n\n\nconst GifGrid = ({category}) => {\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__bounceIn\"> {category} </h3>\n      { loading && <p className=\"animate__animated animate__flash\"> Cargando... </p>}\n      {\n        (images)\n        ?\n          <div className=\"grid\">\n            { \n              images.map( image => ( \n                  <GifGridItem \n                    {...image}\n                    key={image.id}\n                  /> \n              ))\n            }\n          </div>\n        :\n          <p>Data not found ...</p>\n      }\n    </>\n  )\n}\n\nexport default GifGrid\n","import React, {useState} from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid'\n\nconst GifExpertApp = (params) => {\n  const [categories, setCategories] = useState(['Spiderman']);\n\n  return (\n    <>\n      <h2> Gyphera </h2>\n      <hr/>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        { categories.map((category) => ( \n            <GifGrid category={category} key={category} />\n          )) \n        }\n      </ol>\n    </>\n  )\n}\n\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Gyphera from './Gyphera';\nimport './index.css';\n\nReactDOM.render(\n    <Gyphera />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}